/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void speedSliderChange(GCustomSlider source, GEvent event) { //_CODE_:speedSlider:737727:
  speed = speedSlider.getValueF();
} //_CODE_:speedSlider:737727:

public void distanceSliderChange(GCustomSlider source, GEvent event) { //_CODE_:distanceSlider:764924:
  distance = distanceSlider.getValueF();
  rotations = int((distance * 1000) / circ); // Finds the number of rotations needed
} //_CODE_:distanceSlider:764924:

public void powerSliderChange(GCustomSlider source, GEvent event) { //_CODE_:powerSlider:295927:
  power = powerSlider.getValueI();
} //_CODE_:powerSlider:295927:

public void cadenceSliderChange(GCustomSlider source, GEvent event) { //_CODE_:cadenceSlider:215471:
  cadence = cadenceSlider.getValueI();
} //_CODE_:cadenceSlider:215471:

public void heartRateSliderChange(GCustomSlider source, GEvent event) { //_CODE_:heartRateSlider:500275:
  heartRate = heartRateSlider.getValueI();
} //_CODE_:heartRateSlider:500275:

public void batterySliderChange(GCustomSlider source, GEvent event) { //_CODE_:batterySlider:544091:
  battery = batterySlider.getValueI();
} //_CODE_:batterySlider:544091:

public void serialSelectClick(GDropList source, GEvent event) { //_CODE_:serialSelect:597816:
  
} //_CODE_:serialSelect:597816:

public void runButtonClick(GButton source, GEvent event) { //_CODE_:runButton:586240:
  
  if (sendData == false) {
    // Start sending data becausew we weren't
    target.line = new Serial(this, serialSelect.getSelectedText(), BAUDRATE);
    sendData = true;
    serialSelect.setEnabled(false); //Disable the serial selector
    runButton.setText("STOP");
    runButton.setLocalColorScheme(runButton.RED_SCHEME);
  }
  else {
    // Stop sending data, free serial line
    sendData = false;
    target.endComms();
    serialSelect.setEnabled(true); //Disable the serial selector
    runButton.setText("Start");
    runButton.setLocalColorScheme(runButton.GREEN_SCHEME);
  }
} //_CODE_:runButton:586240:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  G4P.setDisplayFont("Arial", G4P.PLAIN, 16);
  surface.setTitle("Sketch Window");
  speedSlider = new GCustomSlider(this, 300, 10, 240, 40, "grey_blue");
  speedSlider.setShowValue(true);
  speedSlider.setLimits(50.0, 0.0, 100.0);
  speedSlider.setNumberFormat(G4P.DECIMAL, 2);
  speedSlider.setOpaque(false);
  speedSlider.addEventHandler(this, "speedSliderChange");
  distanceSlider = new GCustomSlider(this, 300, 60, 240, 40, "grey_blue");
  distanceSlider.setShowValue(true);
  distanceSlider.setLimits(0.5, 0.0, 8.0);
  distanceSlider.setNumberFormat(G4P.DECIMAL, 2);
  distanceSlider.setOpaque(false);
  distanceSlider.addEventHandler(this, "distanceSliderChange");
  powerSlider = new GCustomSlider(this, 300, 110, 240, 40, "grey_blue");
  powerSlider.setShowValue(true);
  powerSlider.setLimits(1, 0, 255);
  powerSlider.setNumberFormat(G4P.INTEGER, 0);
  powerSlider.setOpaque(false);
  powerSlider.addEventHandler(this, "powerSliderChange");
  cadenceSlider = new GCustomSlider(this, 300, 160, 240, 40, "grey_blue");
  cadenceSlider.setShowValue(true);
  cadenceSlider.setLimits(1, 0, 255);
  cadenceSlider.setNumberFormat(G4P.INTEGER, 0);
  cadenceSlider.setOpaque(false);
  cadenceSlider.addEventHandler(this, "cadenceSliderChange");
  heartRateSlider = new GCustomSlider(this, 300, 210, 240, 40, "grey_blue");
  heartRateSlider.setShowValue(true);
  heartRateSlider.setLimits(1, 0, 255);
  heartRateSlider.setNumberFormat(G4P.INTEGER, 0);
  heartRateSlider.setOpaque(false);
  heartRateSlider.addEventHandler(this, "heartRateSliderChange");
  batterySlider = new GCustomSlider(this, 300, 260, 240, 40, "grey_blue");
  batterySlider.setShowValue(true);
  batterySlider.setLimits(1, 0, 100);
  batterySlider.setNumberFormat(G4P.INTEGER, 0);
  batterySlider.setOpaque(false);
  batterySlider.addEventHandler(this, "batterySliderChange");
  serialSelect = new GDropList(this, 10, 210, 170, 80, 3, 10);
  serialSelect.setItems(loadStrings("list_597816"), 0);
  serialSelect.addEventHandler(this, "serialSelectClick");
  runButton = new GButton(this, 10, 180, 170, 20);
  runButton.setText("Start");
  runButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  runButton.addEventHandler(this, "runButtonClick");
  label1 = new GLabel(this, 200, 10, 90, 40);
  label1.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label1.setText("Speed (km/h):");
  label1.setOpaque(false);
  label2 = new GLabel(this, 200, 60, 90, 40);
  label2.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label2.setText("Distance (km):");
  label2.setOpaque(false);
  label3 = new GLabel(this, 200, 110, 90, 40);
  label3.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label3.setText("Power (W):");
  label3.setOpaque(false);
  label4 = new GLabel(this, 190, 160, 100, 40);
  label4.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label4.setText("Cadence (RPM):");
  label4.setOpaque(false);
  label5 = new GLabel(this, 180, 210, 110, 40);
  label5.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label5.setText("Heart Rate (BPM):");
  label5.setOpaque(false);
  label6 = new GLabel(this, 180, 260, 110, 40);
  label6.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label6.setText("Battery (%):");
  label6.setOpaque(false);
  circLabel = new GLabel(this, 10, 10, 176, 140);
  circLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  circLabel.setText("circumference message");
  circLabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GCustomSlider speedSlider; 
GCustomSlider distanceSlider; 
GCustomSlider powerSlider; 
GCustomSlider cadenceSlider; 
GCustomSlider heartRateSlider; 
GCustomSlider batterySlider; 
GDropList serialSelect; 
GButton runButton; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GLabel circLabel; 
