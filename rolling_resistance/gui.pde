/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:serial_list:260354:
  //println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:serial_list:260354:

public void serial_select_click(GButton source, GEvent event) { //_CODE_:serial_select:215152:
  arduino = new Serial(this, serial_list.getSelectedText(),BAUDRATE);
  //println(serial_list.getSelectedText());
  serial_list.setEnabled(false);
  serial_select.setVisible(false);
  start_btn.setVisible(true);
} //_CODE_:serial_select:215152:

public void start_btn_click(GButton source, GEvent event) { //_CODE_:start_btn:867363:
  // Start recording
  start_btn.setVisible(false);
  stop_btn.setVisible(true);
  
  arduino.clear(); // Clear the serial buffer to have new data
  
  // Start new file
  String filename = "rolling resistance " + month() + "-" + day() + " " + hour() + ":" + minute();
  filename = filename + ".csv"; // Adds filetype
  output = createWriter(filename);
  println("Saving to: " + filename);
} //_CODE_:start_btn:867363:

public void stop_btn_click(GButton source, GEvent event) { //_CODE_:stop_btn:371017:
  exit();
} //_CODE_:stop_btn:371017:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  serial_list = new GDropList(this, 20, 390, 170, 80, 3, 10);
  serial_list.setItems(loadStrings("list_260354"), 0);
  serial_list.addEventHandler(this, "dropList1_click1");
  serial_select = new GButton(this, 210, 390, 110, 20);
  serial_select.setText("Select Serial Line");
  serial_select.addEventHandler(this, "serial_select_click");
  start_btn = new GButton(this, 370, 430, 180, 30);
  start_btn.setText("Wheels Sync'd / Record");
  start_btn.addEventHandler(this, "start_btn_click");
  stop_btn = new GButton(this, 570, 430, 130, 30);
  stop_btn.setText("Stop and Exit");
  stop_btn.setLocalColorScheme(GCScheme.RED_SCHEME);
  stop_btn.addEventHandler(this, "stop_btn_click");
  label1 = new GLabel(this, 10, 10, 80, 20);
  label1.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label1.setText("Wheel RPM:");
  label1.setOpaque(false);
  label2 = new GLabel(this, 10, 30, 80, 20);
  label2.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label2.setText("Base RPM:");
  label2.setOpaque(false);
  wheelLabel = new GLabel(this, 90, 10, 80, 20);
  wheelLabel.setText("0");
  wheelLabel.setOpaque(false);
  baseLabel = new GLabel(this, 90, 30, 80, 20);
  baseLabel.setText("0");
  baseLabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GDropList serial_list; 
GButton serial_select; 
GButton start_btn; 
GButton stop_btn; 
GLabel label1; 
GLabel label2; 
GLabel wheelLabel; 
GLabel baseLabel; 
