/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:lcList:910021:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:lcList:910021:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:zeroInput:673497:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:zeroInput:673497:

public void textfield1_change2(GTextField source, GEvent event) { //_CODE_:scaleInput:452314:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:scaleInput:452314:

public void button1_click1(GButton source, GEvent event) { //_CODE_:calibrate:272350:
  println("calibrate - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:calibrate:272350:

public void button1_click2(GButton source, GEvent event) { //_CODE_:export:477455:
  println("export - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:export:477455:

public void button1_click3(GButton source, GEvent event) { //_CODE_:load:866453:
  println("load - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:load:866453:

public void textarea1_change1(GTextArea source, GEvent event) { //_CODE_:textarea1:231265:
  println("textarea1 - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:textarea1:231265:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  lcList = new GDropList(this, 20, 15, 90, 80, 3, 10);
  lcList.setItems(loadStrings("list_910021"), 0);
  lcList.addEventHandler(this, "dropList1_click1");
  label2 = new GLabel(this, 120, 15, 60, 20);
  label2.setText("Zero");
  label2.setOpaque(false);
  zeroInput = new GTextField(this, 150, 15, 120, 20, G4P.SCROLLBARS_NONE);
  zeroInput.setOpaque(true);
  zeroInput.addEventHandler(this, "textfield1_change1");
  label3 = new GLabel(this, 270, 14, 60, 20);
  label3.setText("Scale");
  label3.setOpaque(false);
  scaleInput = new GTextField(this, 310, 15, 120, 20, G4P.SCROLLBARS_NONE);
  scaleInput.setOpaque(true);
  scaleInput.addEventHandler(this, "textfield1_change2");
  calibrate = new GButton(this, 440, 15, 80, 20);
  calibrate.setText("Calibrate");
  calibrate.addEventHandler(this, "button1_click1");
  export = new GButton(this, 620, 15, 80, 20);
  export.setText("Export Cal");
  export.addEventHandler(this, "button1_click2");
  load = new GButton(this, 530, 15, 80, 20);
  load.setText("Load Cal");
  load.addEventHandler(this, "button1_click3");
  textarea1 = new GTextArea(this, 15, 380, 690, 80, G4P.SCROLLBARS_NONE);
  textarea1.setOpaque(true);
  textarea1.addEventHandler(this, "textarea1_change1");
}

// Variable declarations 
// autogenerated do not edit
GDropList lcList; 
GLabel label2; 
GTextField zeroInput; 
GLabel label3; 
GTextField scaleInput; 
GButton calibrate; 
GButton export; 
GButton load; 
GTextArea textarea1; 
